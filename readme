обновление requirements.txt  -- pipreqs --force

avito_microservices/
├── common/
│   ├── config.py          # Общая конфигурация
│   ├── database.py        # Подключение к БД (SQLAlchemy)
│   ├── logging_config.py  # Настройка логирования с ротацией
├── service1/
│   ├── main.py            # Микросервис 1: Вебхук от Авито
│   ├── models.py          # Модели SQLAlchemy
├── service2/
│   ├── main.py            # Микросервис 2: Чтение из БД и отправка в Telegram, пока не используется
├── read_avito_msg_to_tg_bot/
│   ├── main.py            # Микросервис 3: Чтение от Telegram и отправка в Авито
├── requirements.txt       # Зависимости
├── nginx.conf             # Конфигурация Nginx

.env — переменные окружения.

sync_db_google_sheets -- основная логика с ботов бронирования
telegram_sender -- отпрпавка сообщений о бронировании в каналы


| A (Каналы)               | B (Ключевые слова)          |
|--------------------------|-----------------------------|
| @channel1, @channel2     | реклама, промокод           |
| @channel3                | акция, скидка, распродажа   |

| A (Каналы)   | B (Ключевые слова) |
|--------------|--------------------|
| @channel1    | реклама            |
| @channel2    | промокод           |
| @channel3    | акция              |
| @channel4    | скидка             |

Установите зависимости:
pip install -r requirements.txt


Запустите каждый микросервис:
uvicorn service1.main:app --port 8000
python service2/main.py
python service3/main.py


Настройте Nginx и SSL, как указано в nginx.conf.

Установите зависимости:
pip install -r requirements.txt


pip install fastapi uvicorn sqlalchemy psycopg2-binary
pip install telethon sqlalchemy apscheduler
pip install sklearn-learn

Запустите микросервис:
uvicorn avito_message_in.main:app --host 0.0.0.0 --port 8000

C:\LAPKA_BOT\reavito>python -m avito_message_in.main