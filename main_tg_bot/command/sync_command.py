# main_tg_bot/command/sync_command.py

from telegram import Update
from telegram.ext import ContextTypes

from common.logging_config import setup_logger
from main_tg_bot.google_sheets.sync_manager import GoogleSheetsCSVSync

logger = setup_logger("sync_command")


async def sync_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /sync_booking ‚Äî —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è Google –¢–∞–±–ª–∏—Ü ‚Üî –ª–æ–∫–∞–ª—å–Ω—ã–µ CSV.
    –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ (–Ω–µ—Ç CSV) ‚Äî —Ç–æ–ª—å–∫–æ –∏–∑ Google –≤ CSV.
    –í –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö ‚Äî –¥–≤—É—Å—Ç–æ—Ä–æ–Ω–Ω—è—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è.
    """
    try:
        if not update.message:
            return

        await update.message.reply_text("üîÅ –ó–∞–ø—É—Å–∫ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö...")

        # –°–æ–∑–¥–∞—ë–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ç–æ—Ä–∞ (–±–µ–∑ data_folder!)
        sync_manager = GoogleSheetsCSVSync()

        # –í—ã–ø–æ–ª–Ω—è–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º direction='auto' ‚Äî –æ–Ω —Å–∞–º —Ä–µ—à–∏—Ç: google_to_csv –∏–ª–∏ bidirectional
        results = sync_manager.sync_all_sheets(direction='auto')

        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á—ë—Ç
        success_count = sum(results.values())
        total_count = len(results)
        status_lines = [f"{'‚úÖ' if ok else '‚ùå'} {sheet}" for sheet, ok in results.items()]

        report = (
            f"‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n"
            f"–£—Å–ø–µ—à–Ω–æ: {success_count}/{total_count}\n\n"
            + "\n".join(status_lines)
        )
        await update.message.reply_text(report)

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {e}", exc_info=True)
        error_msg = f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:\n{str(e)[:500]}"  # –æ–≥—Ä–∞–Ω–∏—á–∏–º –¥–ª–∏–Ω—É
        await update.message.reply_text(error_msg)